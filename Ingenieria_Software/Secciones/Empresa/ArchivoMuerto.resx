<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACsFQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABVmSURBVHja7Z0LcFzVfYevn2BZsjHghgECocmkLWRK0pAhzaSdaZNOZkiblmY6bUNS
        2kk7bZPONKHTKTiu5Tc2phgwFIIpxhhsLEu2/JAtv2TJWJYlrR6WbGlfeq72/ZTlN4/T/7laPQyytau9
        stfS95v55q5Buzq795zvnnvuf68MY5LktsWFxtzF24x5+UXGnCVF985ZXPhLoUwICx8LCiYVHyf3ve4D
        v8hbXHjvnPztxtwlhdI/Cg0ygaJ36G0y+H9/4RsigcI/kh1eIVxiEEAS3RfKhe888s5u6S/bjDyBTIDM
        XrHTmLusyMhbWKQH/w9kJ3fS4eEq6L7x+F1P7zNylxYYuSsLGEA3e+79+3XGnPxthuzYrwotdHIYBYfM
        GL8mW+OOn5UwgG725C0pMnKX7JgpO3Q9nRtS5I3cpYUz81gLmADn/2LyOYuLHpJtNx0bUqRbZgEP6r5D
        JoQACn/Moh+kwUXhCQQwATLXvPxX+HTWd7r8bUNk8Dp5Qq68xuxFFiGvlZc/KSXwXwhg4swA8rO5s+Wt
        2KVyXq5Qs16rUrNfPKLylhWP7XVkoN65bLv61msH1N9sOaaeLKgSjo+Zn2w9rh7bUK4eeG7XZJRAPgJA
        AOPO7LVlavqOHjXlYJ8yDp9TUw6cUTO2tqvc1fvSHvz3r96llh1uUtVdQXXaH1WtgVhGtAgnvRG1ralT
        fWf9YXN2gQAIArCEbSp3VYmattOvjCMXlVF2YQj594ytbWnNBOYtLVLPlDYoRyiu3OGEcsnWaQH6ddoi
        CbWnpVs9tHaveXqBAAgCsOCcf9br1XLUP3/l4E+iZwKzXzic0pqAPvp/+X/2qEMurzn4nRYN/uFosfxj
        4QlzXQABEARggQBueevkZ4/+AwI4dFbNerUyJQHoo/I3XtmvarpDyhWOj4sA2mUWsKC0kRkAQQDXbQaw
        NvUZwG/JDODweM8AipgBEARwndYA2tNeA1hQ2tB/3m7hLGBgDaCkxaO+whoAQQDWXwWYtsOrphw8m7wK
        0KdmFHSM6SrAF1bvUivKms1TgZYMrwAM0OSLqKLmTvXdN8u4CkAQwLjUAazcrXLWHZVTghMq58XyjOoA
        5i/frr79+kH1o/crM64D+DvhT98uV19cs5s6AIIAqAREAAQBAAIgCAAQAEEAgAAIAgAEQBAAIAAyaQQw
        fOUebhwIgFxXAehOt6RI5T23V+W9WqHy1h8XqiAFct+sVjlv1alZ/5chb9apnNdPqNw1pWrO0u3jIQIE
        gACuMvhXl6jcrafV7KMxlVNzXuXUXlA5touQIrNsl9SM45fUlPILI34PIlWmHD6nppbG1cwtTpX7XCkC
        IOMsAF0Us2afml3ao3LqL6uchg/7tzAmbqnOXAJG2UXzuxPTd/pV7vMHrJwJIAAE8CmW7VCzi90MfAuZ
        UXUpQwEM+wJVYafKW74TAZBxEIA++r9SrnKqzzFwLWSW7bKaWnHBEgnoeyjkvHrMqlkAAkAAVwog972T
        HP3HgenHLlo2C7hlYzMCIONzCpBb5EAA43EacNy604CZ77v6rwogAGKpAJYUqdztTgSQ5QKYUdBurtUg
        AIIAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAA
        CAABIAAEgAAQAEEACAABEASAABAAQQAMWgRAEAAgAIIAAAEQBAAIgCAAQAAEAQACIAgAEABBAIAACAIA
        BEAQACAAggAAARAEgAAQAEEACAABEASAABAAQQAIAAEQBIAAEABBAAgAARAEgAAQAEEACAABEASAABAA
        QQAIAAEQBIAAEABBAAgAARAEgAAQAEEACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAA
        AkAACAABIAAEgAAQAAJAAAgAASAABIAAGEAIAAEgAIIAEAACIAgAASAAggAAARAEAAiAIABAAAQBAAIg
        CAAQAEEAgAAIAgAEQBAAIACCAAABEAQACIAgAEAABAEgAARAEAACQAAEASAABEAQAAJAAAQBIAAEQBAA
        AkAAZKS4olGj/YzXcIYThjOU6N8O43deKDHy8gvz82SnZoQIYLYIYJYIYJZ0WrAGLYDpFgsgb+l2Jfs8
        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
</value>
  </data>
</root>